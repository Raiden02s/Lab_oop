using System;
using System.Windows.Forms;
using System.IO;
using System.ComponentModel;
using System.Resources;
using System.Globalization;
using System.Threading;
using System.Drawing; // Added for FontFamily

namespace TextEditor
{
    public partial class Form1 : Form
    {
        private string currentFilePath = null;
        private CultureInfo currentCulture;

        public Form1()
        {
            InitializeComponent();
            InitializeLanguageMenu();
            SetLanguage("en-US"); // Default language: English

            // Populate fontComboBox at runtime
            foreach (FontFamily font in FontFamily.Families)
            {
                fontComboBox.Items.Add(font.Name);
            }

            // Populate sizeComboBox at runtime
            for (int size = 8; size <= 72; size += 2)
            {
                sizeComboBox.Items.Add(size);
            }

            // Set default font and size
            fontComboBox.SelectedItem = "Segoe UI";
            sizeComboBox.SelectedItem = 14;
        }

        private void InitializeLanguageMenu()
        {
            var languageMenu = new ToolStripMenuItem("Language");
            var enMenuItem = new ToolStripMenuItem("English", null, (s, e) => SetLanguage("en-US"));
            var ukMenuItem = new ToolStripMenuItem("Українська", null, (s, e) => SetLanguage("uk-UA"));
            languageMenu.DropDownItems.Add(enMenuItem);
            languageMenu.DropDownItems.Add(ukMenuItem);
            menuStrip1.Items.Add(languageMenu);
        }

        private void SetLanguage(string cultureName)
        {
            currentCulture = new CultureInfo(cultureName);
            Thread.CurrentThread.CurrentUICulture = currentCulture; // Apply culture to thread
            Thread.CurrentThread.CurrentCulture = currentCulture;   // Also set CurrentCulture for consistency

            // Use the Resource1 class directly (auto-generated by Resource1.resx)
            fileToolStripMenuItem.Text = WindowsFormsApp1.Resource1.FileMenu;
            newToolStripMenuItem.Text = WindowsFormsApp1.Resource1.NewMenu;
            openToolStripMenuItem.Text = WindowsFormsApp1.Resource1.OpenMenu;
            saveToolStripMenuItem.Text = WindowsFormsApp1.Resource1.SaveMenu;
            exitToolStripMenuItem.Text = WindowsFormsApp1.Resource1.ExitMenu;
            editToolStripMenuItem.Text = WindowsFormsApp1.Resource1.EditMenu;
            copyToolStripMenuItem.Text = WindowsFormsApp1.Resource1.CopyMenu;
            pasteToolStripMenuItem.Text = WindowsFormsApp1.Resource1.PasteMenu;
            cutToolStripMenuItem.Text = WindowsFormsApp1.Resource1.CutMenu;
            undoToolStripMenuItem.Text = WindowsFormsApp1.Resource1.UndoMenu;
            redoToolStripMenuItem.Text = WindowsFormsApp1.Resource1.RedoMenu;
            formatToolStripMenuItem.Text = WindowsFormsApp1.Resource1.FormatMenu;
            alignLeftToolStripMenuItem.Text = WindowsFormsApp1.Resource1.AlignLeftMenu;
            alignCenterToolStripMenuItem.Text = WindowsFormsApp1.Resource1.AlignCenterMenu;
            alignRightToolStripMenuItem.Text = WindowsFormsApp1.Resource1.AlignRightMenu;
            this.Text = WindowsFormsApp1.Resource1.FormTitle;
            this.Refresh(); // Force UI update
        }

        private void newToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Clear();
            currentFilePath = null;
        }

        private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.Filter = "Text Files (*.txt)|*.txt|All Files (*.*)|*.*";
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    richTextBox1.Text = File.ReadAllText(openFileDialog.FileName);
                    currentFilePath = openFileDialog.FileName;
                }
            }
        }

        private void saveToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(currentFilePath))
            {
                using (SaveFileDialog saveFileDialog = new SaveFileDialog())
                {
                    saveFileDialog.Filter = "Text Files (*.txt)|*.txt|All Files (*.*)|*.*";
                    if (saveFileDialog.ShowDialog() == DialogResult.OK)
                    {
                        File.WriteAllText(saveFileDialog.FileName, richTextBox1.Text);
                        currentFilePath = saveFileDialog.FileName;
                    }
                }
            }
            else
            {
                File.WriteAllText(currentFilePath, richTextBox1.Text);
            }
        }

        private void exitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void copyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Copy();
        }

        private void pasteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Paste();
        }

        private void cutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Cut();
        }

        private void undoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Undo();
        }

        private void redoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.Redo();
        }

        private void alignLeftToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Left;
        }

        private void alignCenterToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Center;
        }

        private void alignRightToolStripMenuItem_Click(object sender, EventArgs e)
        {
            richTextBox1.SelectionAlignment = HorizontalAlignment.Right;
        }

        private void fontComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (fontComboBox.SelectedItem != null && richTextBox1.SelectionFont != null)
            {
                float size = richTextBox1.SelectionFont.Size;
                FontStyle style = richTextBox1.SelectionFont.Style;
                richTextBox1.SelectionFont = new Font((string)fontComboBox.SelectedItem, size, style);
            }
        }

        private void sizeComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (sizeComboBox.SelectedItem != null && richTextBox1.SelectionFont != null)
            {
                float size = float.Parse(sizeComboBox.SelectedItem.ToString());
                string family = richTextBox1.SelectionFont.FontFamily.Name;
                FontStyle style = richTextBox1.SelectionFont.Style;
                richTextBox1.SelectionFont = new Font(family, size, style);
            }
        }

        private void boldButton_Click(object sender, EventArgs e)
        {
            Font currentFont = richTextBox1.SelectionFont;
            if (currentFont != null)
            {
                richTextBox1.SelectionFont = new Font(currentFont, currentFont.Style ^ FontStyle.Bold);
            }
        }

        private void italicButton_Click(object sender, EventArgs e)
        {
            Font currentFont = richTextBox1.SelectionFont;
            if (currentFont != null)
            {
                richTextBox1.SelectionFont = new Font(currentFont, currentFont.Style ^ FontStyle.Italic);
            }
        }

        private void richTextBox1_TextChanged(object sender, EventArgs e)
        {
            // Placeholder for TextChanged event
        }
    }
}